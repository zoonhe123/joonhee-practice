<launch>
   
   
    <!-- subscribe /encoder_data , publish /odom -->
    <node pkg="practice" type="encoder_publisher.py" name="encoder_publisher" output="screen" />
    <node pkg="practice" type="odom_publisher.py" name="odom_publisher" output="screen" />


    <!-- change imu coordinate frame -->    
    <node pkg="practice" type="imu_frame_changer.py" name="imu_frame_changer" output="screen" />


    <!-- plus quaternion -->
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="ImuFilter">
        <param name="use_mag" type="bool" value="false" />
        <param name="publish_tf" type="bool" value="false" />
        <param name="world_frame" type="string" value="enu" />
        <remap from="/imu/data_raw" to="/raw_imu"/>
    </node>

    <!-- publish /tf , URDF -->    
    <param name="robot_description" textfile="$(find robot_description)/urdf/AGV.urdf" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- EKF node -->    
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam command="load" file="$(find practice)/config/ekf_localization_simul.yaml"/>
        <!-- <remap from="odom" to="odometry/filtered" /> -->
    </node>


    <!-- publish tf 'odometry/filtered <-> base_footprint' -->    
    <node pkg="practice" type="tf_publisher.py" name="tf_publisher" output="screen" />


</launch>

    
